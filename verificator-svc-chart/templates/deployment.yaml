{{- if eq .Values.kind "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "template.fullname" . }}
  annotations:
    reloader.stakater.com/auto: "true"
    pod-reloader.deckhouse.io/auto: "true"
  labels:
    {{- include "template.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "template.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "template.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.front }}
        - name: cache
          emptyDir: {}
        - name: run
          emptyDir: {}
        - name: nginx
          configMap:
            name: {{ include "template.fullname" . }}-config
        - name: association
          configMap:
            name: {{ include "template.fullname" . }}-config
        {{- end }}
        {{- if .Values.config.create }}
        - name: config
          configMap:
            name: {{ include "template.fullname" . }}-config
        {{- end }}
        {{- if and .Values.persistence.enabled }}           
        - name: "{{ .Release.Name }}-{{ include "template.fullname" . }}-data"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-{{ include "template.fullname" . }}-data"
        {{- end }}
        {{- range .Values.extraVolume }}
        - name: {{ .name }}
          emptyDir: {}
        {{- end }}
      {{- if .Values.postgresql.enabled }}
      initContainers:
      - name: init-wait
        image: alpine:3.16.0
        command: ["sh", "-c", "for i in $(seq 1 300); do nc -zvw1 {{ .Values.postgresql.fullnameOverride }} 5432 && exit 0 || sleep 3; done; exit 1"]
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 1000
          capabilities:
            drop:
              - ALL
        resources:
            limits:
              cpu: 20m
              memory: 20Mi
            requests:
              cpu: 10m
              memory: 10Mi
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env.enable  }}
          env:
            {{- toYaml .Values.env.data | nindent 12 }}
          {{- end }}
          {{- if .Values.arg.enable }}
          args:
            {{- toYaml .Values.arg.data | nindent 12 }}
          {{- end }}
          {{- if .Values.command.enable }}
          command:
            {{- toYaml .Values.command.data | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.front }}
            - name: cache
              mountPath: /var/cache/nginx
            - name: run
              mountPath: /var/run
            - name: nginx
              mountPath: "/etc/nginx/nginx.conf"
              subPath: nginx.conf
            - name: association
              mountPath: "/usr/share/nginx/html/apple-app-site-association"
              subPath: apple-app-site-association
            {{- if .Values.config.create }}
            - name: config
              mountPath: "{{ .Values.config.mountPathFront }}"
              subPath: env.js
            - name: config
              mountPath: "{{ .Values.config.mountPathFront2 }}"
              subPath: env.js
            {{- end }}
          {{- else }}
            {{- if .Values.config.create }}
            - name: config
              mountPath: "{{ .Values.config.mountPath }}"
            {{- end }}
          {{- end }}
          {{- if and .Values.persistence.enabled }}
            - name: "{{ .Release.Name }}-{{ include "template.fullname" . }}-data"
              mountPath: "/data"
          {{- end }}
          {{- range .Values.extraVolume }}
            - name: {{ .name }}
              mountPath: {{ .mountPath}}
          {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.probes }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}